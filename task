#!/bin/bash
#CLI reminder toolkit for alerts/terminal headers and more
#Written by Will Russell/Scotchman0
#9/15/21
#Version 0.1

#################################################################################

#Define actions desired:
#because we want to have an 'echo to the top of your new cli instance' feature
#We need to define a file to source:
#CLI BANNER REMINDERS:
# - a text file location that gets written to by the remindme command
# - this text file is sourced by ~/.bashrc or ~/.zshrc
# - setup must ask to echo the source command: $ echo "echo ~/.remindme/banner_reminders" >> ~/.bashrc

#ALERTS TRIGGERED VIA CRON SCHEDULING
# - a text file location that gets written to by the remindme command: ~/.remindme/alert_reminders
# - each entry is handled by entry number tied to a cronscript maybe?
# - example entry format: $ remindme @1:00pm "Gotta buy socks"
#   - alert_reminders gets an entry "gotta buy socks" and a unique string identifier --> 30932 "gotta buy socks"
#   - cronjob task is started, that triggers an alert echo of the entry tied to the unique id maybe.
# Might could/should explore using 'at' command for this, if can tie into the functionality. 
# desire pop-up alerts in alerts-manager - also 'wall' commands

#Features that would be nice to have: 
# inclusion of some repeating reminders
# example: $ remindme @1:00pm "Gotta buy socks" --repeat daily|weekly|monthly|custom
# if you tag custom, it asks for cron measurements: 5 * * 1 * with a print out of examples


####################################~~FUNCTION BLOCKS~~########################
setup() {
#run only if ~/.remindme.conf does not exist - see firstrun block
#define file locations and paths:
touch ~/.task_list
echo "would you like to have tasks added to your ~/.*shrc profile to print list when you start a new shell?"
echo "y|N"
read option
case $option in
  y|Y) clear
    echo "echo ## REMINDERS ##" >> ~/.*shrc
    echo "cat ~/.task_list" >> ~/.*shrc
    echo "cat command added to your ~/.*shrc file to read contents from ~/.task_list"
    ;;
  n|N) clear
    echo "no configuration changes made - tasks are managed in ~/.task_list"
    ;;
  *) echo "non y/n answer recieved, defaulting to no change"
    ;;
esac

}

#basic launch block:
# while test $# -gt 0; do
# 	case $1 in
# 		in|at|when) # modifier value to indicate the next argument is a time value
# 			shift
# 			if test $# -gt 0; then
# 				set_timer="$@"


alert() {
	notify-send REMINDER $reminder_
}

add_reminder() {
	echo emptystring
}

remove_reminder() {
echo emptystring
}

#go block:

while test $# -gt 0; do #general while loop to lock behavior surrounding case options. 
  case "$1" in
    -h|help)
      shift
      echo "#######  task help #######"
      echo "command usage: $ task <option> <string>"
      echo "task -h|help: print this breif help"
      echo "task -n|new: create new reminder entry --> $ task -n 'buy eggs'"
      echo "task -a|all: pring all reminders in list: 'buy eggs' 'buy milk' 'get gas'"
      echo "task -c|clear: purge all reminders from list"
      break
      ;;
  	-n|new) #create new note or edit existing note (*if specify exact note name)
      shift
      if test $# -gt 0; then
        echo $@ >> ~/.remindme_reminders
      else
        echo "reminder cannot be empty string"
      fi
      break
      ;;
    -a|all) #no option print existing reminders block
      	cat ~/.remindme_reminders
      break
      ;;
    -c|clear) # remove all reminders
        echo "" > ~/.remindme_reminders
        break
      ;;
      *) #no option default
        echo "invalid option, printing help"
        task -h
		    break
		;;
  esac
done
exit 0